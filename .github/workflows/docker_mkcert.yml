name: Build mkcert docker
on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
env:
  docker_organization: vleedev
  docker_repository: filosottile_mkcert
  docker_login: vleedev
  docker_tag: "${{ inputs.version }}"

jobs:
  deploy:
    strategy:
      matrix:
        runs-on: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.runs-on }}
    if: ${{ inputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: "${{ env.docker_login }}"
          password: "${{ secrets.DOCKER_HUB_TOKEN }}"
      - 
        name: Docker Build and Push
        run: |
          docker_image="${{ env.docker_organization }}/${{ env.docker_repository }}"
          docker_image_with_version_tag="${docker_image}:${{ env.docker_tag }}"
          docker_image_with_latest_tag="${docker_image}:latest"
          # Build image
          docker build -t "${docker_image_with_version_tag}" --target=app --build-arg MKCERT_VERSION="${{ inputs.version }}" .
          # Tag latest
          docker tag "${docker_image_with_version_tag}" "${docker_image_with_latest_tag}"
          # Push image with the specific version tag
          docker push "${docker_image_with_version_tag}"
          # Push image with the latest tag
          docker push "${docker_image_with_latest_tag}"
